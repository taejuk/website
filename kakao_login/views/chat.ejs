<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <script
      src="https://code.jquery.com/jquery-3.4.1.min.js"
      integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
      crossorigin="anonymous"
    ></script>
    <title>chatting</title>
    <script>
        var host;
        var port;
        var socket;
        $(function() {
            $("#connectButton").bind('click', function(event) {
                println('connectionButton이 클릭되었습니다.');
                host = $('#hostInput').val();
                port = $('#portInput').val();
                connectToServer();
            });

            $("#createRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();
                var roomName = $("#roomNameInput").val();
                
                var output = {command: 'create', roomId: roomId, roomName: roomName};
                console.log(`서버로 보낼 데이터: ${JSON.stringify(output)}`);

                if (socket == undefined) {
                    alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.');
                    return;
                }
                console.dir(socket.io);
                socket.emit('room', output);
            })
            $("#updateRoomButton").bind('click', function(event) {
                var roomId = $('#roomIdInput').val();
                var roomName = $('#roomNameInput').val();

                var output = {command: 'update', roomId: roomId, roomName: roomName};
                console.log(`서버로 보낼 데이터: ${JSON.stringify(output)}`);

                if(socket==undefined) {
                    alert('서버에 연결하세요.');
                    return;
                }
                socket.emit('room', output);
            });
            $("#deleteRoomButton").bind('click', function(event) {
                var roomId = $('#roomIdInput').val();

                var output = {command: 'delete', roomId: roomId};
                console.log(`서버로 보낼 데이터: ${JSON.stringify(output)}`);

                if (socket==undefined) {
                    alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.');
                    return;
                }
                socket.emit('room', output);
            })
            $("#joinRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();

                var output = {command: 'join', roomId: roomId};
                console.log(`서버로 보낼 데이터:${JSON.stringify(output)}`);
                
                if(socket == undefined) {
                    alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.');
                    return;
                }

                socket.emit('room', output);
            })
            $("#leaveRoomButton").bind('click', function(event) {
                var roomId = $("#roomIdInput").val();

                var output = {command: 'leave', roomId: roomId};
                console.log(`서버로 보낼 데이터: ${JSON.stringify(output)}`);

                if(socket == undefined) {
                    alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.');
                    return;
                }
                socket.emit('room', output);
            })
            $("#sendButton").bind('click', function(event) {
                var chattype = $("#chattype option:selected").val();

                var recepient = $('#recepientInput').val();
                var data = $('#dataInput').val();

                var output = {recepient: recepient, command: chattype, type: 'text', data: data};
                console.log(`서버로 보낼 데이터: ${JSON.stringify(output)}`);

                if(socket == undefined) {
                    alert('서버에 연결되어 있지 않습니다. 먼저 서버에 연결하세요.');
                    return;
                }

                socket.emit('message', output);
            })
        });

        function connectToServer() {
            var options = {'forceNew': true};
            var url = `http://${host}:${port}`;
            socket = io.connect(url, options);

            socket.on('connect', function(){
                println(`웹 소켓 서버에 연결되었습니다. ${url}`);
                socket.on('message', function(message) {
                    console.log(JSON.stringify(message));

                    println(`<p>수신메시지: ${message.sender}: ${message.data}</p>`);
                });
                socket.on('room', function(data) {
                    console.log(JSON.stringify(data));

                    println(`<p>방 이벤트: ${data.command}</p>`);
                    println('<p>방 리스트를 받았습니다. </p>');

                    if(data.command == 'list') {
                        var roomCount = data.rooms.length;
                        $("#roomList").html(`<p>방 리스트: ${roomCount}개`);
                        for(var i = 0; i<roomCount; i++) {
                            $("#roomList").append(`<p>방 #${i}: ${data.rooms[i]}</p>`)
                        }
                    }
                })
            })

            socket.on('disconnect', function() {
                println('웹 소켓 연결이 종료되었습니다.');
            })
        }
        function println(data) {
            console.log(data);
            $('#result').append(`<p>${data}</p>`);
        }
    </script>
</head>
<body>
    <h3>채팅 클라이언트</h3>
    <h4>현재 사용자: <%= nickname %></h4>
    <br>
    <div>
        <input type="text" id="hostInput" value="localhost">
        <input type="text" id="portInput" value="3000">
        <input type="button" id = "connectButton" value="연결하기">
    </div>
    <div>
        <input type="text" id="roomIdInput" value="meeting01">
        <input type="text" id="roomNameInput" value="청춘들의 대화">

        <input type="button" id="createRoomButton" value="방 만들기">
        <input type="button" id = "updateRoomButton" value="방 이름 바꾸기">
        <input type="button" id="deleteRoomButton" value="방 없애기">
    </div>
    <div>
        <input type="button" id="joinRoomButton" value="방 입장하기" />
        <input type="button" id="leaveRoomButton" value="방 나가기" />
    </div>
    <div id="roomList">

    </div>
      <br>
      <div>
      <div>
        <span>받는 사람 아이디: </span>
        <input type="text" id = "recepientInput" value="ALL">
      </div>

      <select name="chattype" id="chattype">
      <option value="chat">채팅</option>
      <option value="groupchat" selected>그룹 채팅</option>
      </select>

      <div>
      <span>메시지 데이터: </span>
      <input type="text" id = "dataInput" value="안녕!" />
      </div>
      <br />
      <input type="button" id = "sendButton" value="전송" />
      </div>
    <br>
    <hr/>
    <p>결과:</p>
    <div id="result"></div>
</body>
</html>